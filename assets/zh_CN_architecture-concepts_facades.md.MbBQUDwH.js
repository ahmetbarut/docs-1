import{_ as s,f as i,o as t,an as e}from"./chunks/framework.CFMQV-X7.js";const g=JSON.parse('{"title":"Facades","description":"","frontmatter":{},"headers":[],"relativePath":"zh_CN/architecture-concepts/facades.md","filePath":"zh_CN/architecture-concepts/facades.md","lastUpdated":1753105519000}'),d={name:"zh_CN/architecture-concepts/facades.md"};function h(n,a,r,l,p,k){return t(),i("div",null,a[0]||(a[0]=[e(`<h1 id="facades" tabindex="-1">Facades <a class="header-anchor" href="#facades" aria-label="Permalink to “Facades”">​</a></h1><nav class="table-of-contents"><ul><li><a href="#简介">简介</a></li><li><a href="#facades-工作原理">facades 工作原理</a></li><li><a href="#facade-类参考">facade 类参考</a></li></ul></nav><h2 id="简介" tabindex="-1">简介 <a class="header-anchor" href="#简介" aria-label="Permalink to “简介”">​</a></h2><p><code>facades</code> 为应用的核心功能提供一个「静态」接口，能够提供更加灵活、更加优雅、易于测试的语法。</p><p>Goravel 所有的 <code>facades</code> 都定义在 <code>github.com/goravel/framework/facades</code> 下。我们可以很轻松的使用 <code>facades</code>：</p><div class="language-go vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">github.com/goravel/framework/facades</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">facades.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Route</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Run</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(facades.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Config</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">GetString</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;app.host&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span></code></pre></div><h2 id="facades-工作原理" tabindex="-1">facades 工作原理 <a class="header-anchor" href="#facades-工作原理" aria-label="Permalink to “facades 工作原理”">​</a></h2><p><code>facades</code> 一般会在各模块 <code>ServerProvider</code> 的 <code>Register</code> 或 <code>Boot</code> 阶段进行实例化。</p><div class="language-go vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">func</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">config </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ServiceProvider</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Register</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  app </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Application</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  facades.Config </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> app.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Init</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>如果该 <code>facades</code> 使用了其他 <code>facades</code>，那么就在 <code>ServerProvider</code> 的 <code>Boot</code> 阶段进行实例化：</p><div class="language-go vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">func</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">database </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ServiceProvider</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Boot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  app </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Application</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  facades.DB </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> app.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Init</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="facade-类参考" tabindex="-1">facade 类参考 <a class="header-anchor" href="#facade-类参考" aria-label="Permalink to “facade 类参考”">​</a></h2><table tabindex="0"><thead><tr><th>Facade</th><th>文档</th></tr></thead><tbody><tr><td>App</td><td><a href="./../architecture-concepts/service-container">容器</a></td></tr><tr><td>Artisan</td><td><a href="./../digging-deeper/artisan-console">命令行工具</a></td></tr><tr><td>Auth</td><td><a href="./../security/authentication">用户认证</a></td></tr><tr><td>Cache</td><td><a href="./../digging-deeper/cache">缓存系统</a></td></tr><tr><td>Config</td><td><a href="./../getting-started/configuration">配置信息</a></td></tr><tr><td>Crypt</td><td><a href="./../security/encryption">加密解密</a></td></tr><tr><td>Event</td><td><a href="./../digging-deeper/event">事件系统</a></td></tr><tr><td>Gate</td><td><a href="./../security/authorization">用户授权</a></td></tr><tr><td>Grpc</td><td><a href="./../the-basics/grpc">Grpc</a></td></tr><tr><td>Hash</td><td><a href="./../security/hashing">哈希</a></td></tr><tr><td>Log</td><td><a href="./../the-basics/logging">日志</a></td></tr><tr><td>Mail</td><td><a href="./../digging-deeper/mail">邮件</a></td></tr><tr><td>Orm</td><td><a href="./../orm/getting-started">ORM</a></td></tr><tr><td>Queue</td><td><a href="./../digging-deeper/queues">队列</a></td></tr><tr><td>RateLimiter</td><td><a href="./../the-basics/routing">限流器</a></td></tr><tr><td>Route</td><td><a href="./../the-basics/routing">路由</a></td></tr><tr><td>Seeder</td><td><a href="./../database/seeding">数据填充</a></td></tr><tr><td>Schedule</td><td><a href="./../digging-deeper/task-scheduling">任务调度</a></td></tr><tr><td>Storage</td><td><a href="./../digging-deeper/filesystem">文件系统</a></td></tr><tr><td>Testing</td><td><a href="./../testing/getting-started">测试</a></td></tr><tr><td>Validation</td><td><a href="./../the-basics/validation">表单验证</a></td></tr></tbody></table>`,13)]))}const o=s(d,[["render",h]]);export{g as __pageData,o as default};
